// SPDX-License-Identifier: MIT
pragma solidity >=0.8.0 <0.9.0;

// TO-DO: Determine if this file needs the below import
import "./ModelMoments.sol";

/// @title Stores and compares hashes of datasets between data owners and cloud providers
/// @author Jackson Bullard
contract DataConfirmation is ModelMoments {
	/// @dev Maps cloud provider to data hash generated by data owner.
	mapping (address => uint) cloudProviderToData;
	/// @dev Maps cloud provider to 'True' if their data hash matches the one from data owner
	mapping (address => bool) cloudProviderEligibility;

	/// @notice Determine whether data was transferred successfully between data owners and cloud providers.
	/// @param _dataHash The keccak256 hash of the dataset generated by the cloud provider.
	function confirmDataHash(uint _dataHash) external {
		if (cloudProviderToData[msg.sender] == _dataHash) {
			cloudProviderEligibility[msg.sender] = true;
		}
	}
}
